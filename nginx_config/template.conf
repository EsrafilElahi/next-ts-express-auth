http {
  upstream backend {
    server backend1.example.com:8080;
    server backend2.example.com:8000;
    keepalive 32;
  }

  upstream frontend {
    server frontend1.example.com:3000;
    server frontend2.example.com:3000;
    keepalive 64;
  }

  upstream image-server {
    server images.example.com:8080;
    keepalive 16;
  }

  upstream dashboard-backend {
    server dashboard.example.com:8000;
    keepalive 8;
  }

  upstream report-backend {
    server report.example.com:8000;
    keepalive 8;
  }

  upstream blog-backend {
    server blog.example.com:8000;
    keepalive 8;
  }

  # HTTP server block
  server {
    listen 80;
    server_name yourdomain.com;
    keepalive_timeout 60s;

    location / {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    location /api {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_connect_timeout 5s;
      proxy_read_timeout 10s;
      proxy_send_timeout 10s;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /images {
      alias /path/to/images/directory;
      expires 7d;
      access_log off;
    }

    location /admin {
      proxy_pass http://admin-backend;
      proxy_set_header Host $host;
      proxy_next_upstream error timeout;
    }

    location /dashboard {
      proxy_pass http://dashboard-backend;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /reports {
      proxy_pass http://report-backend;
      proxy_set_header Host $host;
    }

    location /static {
      alias /path/to/static/files;
      expires 30d;
      access_log off;
    }

    location /downloads {
      root /path/to/downloads;
      autoindex on;
      autoindex_exact_size off;
      autoindex_localtime on;
    }

    location /blog {
      proxy_pass http://blog-backend;
      proxy_set_header Host $host;
    }
  }

  # HTTPS server block
  server {
    listen 443 ssl;
    server_name yourdomain.com;

    # SSL/TLS configurations
    ssl_certificate /path/to/ssl_certificate.crt;
    ssl_certificate_key /path/to/ssl_certificate.key;

    # Enable secure protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    # HTTP to HTTPS redirect
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    location / {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    location /api {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_connect_timeout 5s;
      proxy_read_timeout 10s;
      proxy_send_timeout 10s;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /images {
      alias /path/to/images/directory;
      expires 7d;
      access_log off;
    }

    location /admin {
      proxy_pass http://admin-backend;
      proxy_set_header Host $host;
      proxy_next_upstream error timeout;
    }

    location /dashboard {
      proxy_pass http://dashboard-backend;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /reports {
      proxy_pass http://report-backend;
      proxy_set_header Host $host;
    }

    location /static {
      alias /path/to/static/files;
      expires 30d;
      access_log off;
    }

    location /downloads {
      root /path/to/downloads;
      autoindex on;
      autoindex_exact_size off;
      autoindex_localtime on;
    }

    location /blog {
      proxy_pass http://blog-backend;
      proxy_set_header Host $host;
    }
  }
}
