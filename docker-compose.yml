version: "3.9"

# containers list :
# frontend  --> X
# backend  ---> X
# db  --------> X
# portainer
# traefik
# nginx

services:
  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    container_name: auth-portainer
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=general-network"
      # Frontend
      - "traefik.http.routers.portainer.rule=Host('portainer.testlocal.ir')"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

    networks:
      - general-network

    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  traefik:
    image: traefik:latest
    restart: unless-stopped
    container_name: traefik
    volumes:
      - ./traefik/certs:/ssl-certs
      - ./traefik/traefik:/etc/traefik
      - ./traefik/traefik/log:/log/traefik.log
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - general-network
    labels:
      - "traefik.http.routers.traefik.rule=Host('traefik.testlocal.ir')"
      - "traefik.http.routers.traefik.service=traefik@internal"
      # - "traefik.http.services.traefik.loadbalancer.server.port=80"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersFile=/etc/traefik/users"
      - "traefik.docker.network=general-network"

    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      # (Optional) Expose Dashboard
      - "8000:8000" # Don't do this in production! --> dashboard

  nginx:
    build:
      # context : directory name (area)
      context: nginx_config
      dockerfile: Dockerfile
    container_name: auth-nginx
    restart: always
    
#     depends_on:
#       - api
#       - client

    # for persist two data (static files, media files)
    volumes:
      # nginx create the "backend-static-files" directory on the host (server or nginx) inside the container
      - backend-static-files:/var/www/backend/static/:ro
      # - backend-static-files:/usr/share/nginx/html/static:ro  -----> if use nginx host
      - backend-media-files:/var/www/backend/media/:ro

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=general-network"
      - "traefik.http.routers.frontendstatic.rule=Host('frontend-static.testlocal.ir') && (PathPrefix(`/static`) || PathPrefix(`/media`))"
      - "traefik.http.routers.frontendstatic.service=frontendstatic"
      - "traefik.http.routers.frontendstatic.entrypoints=web,websecure"
      # - "traefik.http.routers.backend.tls=true"
      # - "traefik.http.routers.backend.tls.certresolver=production"
      - "traefik.http.services.frontendstatic.loadbalancer.server.port=80"

      - "traefik.http.routers.backendstatic.rule=Host('backend-static.testlocal.ir') && (PathPrefix(`/static`) || PathPrefix(`/media`))"
      - "traefik.http.routers.backendstatic.service=backendstatic"
      - "traefik.http.routers.backendstatic.entrypoints=web,websecure"
      # - "traefik.http.routers.backend.tls=true"
      # - "traefik.http.routers.backend.tls.certresolver=production"
      - "traefik.http.services.backendstatic.loadbalancer.server.port=80"

    networks:
      - general-network

# create network --> to use backend and frontend externally
networks:
  general-network:
    name: general-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.10.0.0/16

volumes:
  backend-static-files: # use this volume in backend docker compose file as external:true
  backend-media-files: # use this volume in backend docker compose file as external:true
  portainer_data:
