version: "3.9"

services:
  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    container_name: auth-portainer
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=general-network"
      # Frontend
      - "traefik.http.routers.portainer.rule=Host('portainer.testlocal.ir')"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

    networks:
      - general-network

    ports:
      - ${PORTAINER_EXTERNAL_PORT:-9000}:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data

  traefik:
    image: traefik:latest
    restart: unless-stopped
    container_name: traefik
    volumes:
      - ./certs:/ssl-certs
      - ./traefik:/etc/traefik
      - ./traefik/log:/log/traefik.log
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - general-network
    labels:
      - "traefik.http.routers.traefik.rule=Host('traefik.testlocal.ir')"
      - "traefik.http.routers.traefik.service=traefik@internal"
      # - "traefik.http.services.traefik.loadbalancer.server.port=80"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersFile=/etc/traefik/users"
      - "traefik.docker.network=general-network"

    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      # (Optional) Expose Dashboard
      - "8000:8000" # Don't do this in production! --> dashboard

  back:
    # this is container
    build: ./back
    restart: always
    container_name: final-back

    depends_on:
      - db

    environment:
      - PROJECT_PORT=5000
      - DB_USERNAME=next-express-ts-auth
      - DB_PASSWORD=1011221423iran
      - DB_BASE_URI=mongodb+srv://esrafil:1011221423iran@next-cluster.payj8wn.mongodb.net/?retryWrites=true&w=majority
      - SECRET_KEY=64sanf329lc436gs
      - BACK_URL=back-auth.local.com

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=general-network"
      - "traefik.http.routers.back.rule=Host(`${BACK_URL:-back-auth.local.com}`)"
      - "traefik.http.routers.back.service=back"
      - "traefik.http.routers.back.entrypoints=web,websecure"
      # - "traefik.http.routers.back.tls=true"
      # - "traefik.http.routers.back.tls.certresolver=production"
      - "traefik.http.services.back.loadbalancer.server.port=5000"

    ports:
      - 5000:5000

    stdin_open: true
    tty: true

    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules

    networks:
      - general-network

  db:
    image: mongo:5.0.2
    container_name: db

    restart: unless-stopped

    # env_file: .env

    ports:
      - 27017:27017

    environment:
      - PROJECT_PORT=5000
      - DB_USERNAME=next-express-ts-auth
      - DB_PASSWORD=1011221423iran
      - DB_BASE_URI=mongodb+srv://esrafil:1011221423iran@next-cluster.payj8wn.mongodb.net/?retryWrites=true&w=majority
      - SECRET_KEY=64sanf329lc436gs
      - BACK_URL=back-auth.local.com

    volumes:
      - dbdata:/data/db

    networks:
      - general-network

  front:
    # this is container
    build: ./front
    restart: always
    # container_name: final-front
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=general-network"
      - "traefik.http.routers.front.rule=Host(`${FRONT_URL:-front-auth.local.com}`)"
      - "traefik.http.routers.front.service=front"
      - "traefik.http.routers.front.entrypoints=web,websecure"
      # - "traefik.http.routers.front.tls=true"
      # - "traefik.http.routers.front.tls.certresolver=production"
      - "traefik.http.services.front.loadbalancer.server.port=3000"

    ports:
      - 3000:3000

    networks:
      - general-network

# create network --> to use backend and frontend externally
networks:
  general-network:
    name: general-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.10.0.0/16

volumes:
  dbdata:
  node_modules:
